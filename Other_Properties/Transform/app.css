h1 {
    background-color: #2a9d8f;
    border: 5px solid #264653;
    color: #eae2b7;
    padding: 0.7em;
    width: 300px;
    font-size: 1.8em;
    text-align:center;
    margin: 20px auto;
    font-family: Courier New;
    font-weight: lighter;
}

h1:nth-of-type(2n) {
    background-color: #e9c46a;
}
h1:nth-of-type(3n) {
    background-color: #f4a261;
}
h1:nth-of-type(4n) {
    background-color: #e76f51;
}


section:first-of-type h1:nth-of-type(1){
    /* transform-origin: top right; */
    transform: rotate(45deg);
}
section:first-of-type h1:nth-of-type(2){
    transform: scale(0.6);
}

section:first-of-type h1:nth-of-type(3){
    transform: translateX(200px);
}
section:first-of-type h1:nth-of-type(4){
    transform: translate(-100px, 50px);
}

section:nth-of-type(2) h1:nth-of-type(1){
    transform: skew(30deg);
}
section:nth-of-type(2) h1:nth-of-type(2){
    transform: skew(10deg, 5deg);
}

section:nth-of-type(2) h1:nth-of-type(3){
    transform: rotate(-20deg) scale(1.3);
}
section:nth-of-type(2) h1:nth-of-type(4){
    transform: translateX(-500px) rotate(0.5turn) scaleY(1.5);
}

section:nth-of-type(2) {
    transform: scale(0.7) translateX(500px);
    /* everything inside the section is affected*/
}

/* 
    transform: rotate(angle);
    transform: rotate3d(angle);
    transform: rotateX(angle); rotates along X-axis
        eg ->   transform: rotateX(angle);
                transform: rotateX(-0.2turn);
    transform: rotateY(angle);
    transform: rotateZ(angle);
    angle could be in degrees or radians etc.
    
    transform-origin CSS property sets the origin for the element's transformation
    transform-origin: center; (by default)
    transform-origin: top left;
    transform-origin: 50px 50px;
    transform-origin: bottom right 60px;
    using this means, all transformations occurs around the origin we have set

    transform: scale(); resize the element on the 2d plane.
        eg->    transform: scale(0.5) makes it half
                transform: scale(0.5,2) X decreases by half and Y doubles
    Different types of scale()
        transform: scale3d();
        transform: scaleX();
        transform: scaleY();
        transform: scaleZ();

    transform: skew(); skew the element
    We also have
        transform: skewX();
        transform: skewY();
    It accepts angle in degree or radians and turns 

    An important point to remember that the transform property applies to complete element i.e. parent and elements inside it
    
*/

